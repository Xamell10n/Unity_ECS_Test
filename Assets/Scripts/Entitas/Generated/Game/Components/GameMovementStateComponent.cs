//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Enemies.Components.MovementStateComponent movementState { get { return (Enemies.Components.MovementStateComponent)GetComponent(GameComponentsLookup.MovementState); } }
    public bool hasMovementState { get { return HasComponent(GameComponentsLookup.MovementState); } }

    public void AddMovementState(float newFinishMovementStateTime) {
        var index = GameComponentsLookup.MovementState;
        var component = (Enemies.Components.MovementStateComponent)CreateComponent(index, typeof(Enemies.Components.MovementStateComponent));
        component.FinishMovementStateTime = newFinishMovementStateTime;
        AddComponent(index, component);
    }

    public void ReplaceMovementState(float newFinishMovementStateTime) {
        var index = GameComponentsLookup.MovementState;
        var component = (Enemies.Components.MovementStateComponent)CreateComponent(index, typeof(Enemies.Components.MovementStateComponent));
        component.FinishMovementStateTime = newFinishMovementStateTime;
        ReplaceComponent(index, component);
    }

    public void RemoveMovementState() {
        RemoveComponent(GameComponentsLookup.MovementState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMovementState;

    public static Entitas.IMatcher<GameEntity> MovementState {
        get {
            if (_matcherMovementState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MovementState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMovementState = matcher;
            }

            return _matcherMovementState;
        }
    }
}
