//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Unity_Entitas.Components.WaitStateComponent waitState { get { return (Unity_Entitas.Components.WaitStateComponent)GetComponent(GameComponentsLookup.WaitState); } }
    public bool hasWaitState { get { return HasComponent(GameComponentsLookup.WaitState); } }

    public void AddWaitState(float newFinishMovementStateTime) {
        var index = GameComponentsLookup.WaitState;
        var component = (Unity_Entitas.Components.WaitStateComponent)CreateComponent(index, typeof(Unity_Entitas.Components.WaitStateComponent));
        component.FinishMovementStateTime = newFinishMovementStateTime;
        AddComponent(index, component);
    }

    public void ReplaceWaitState(float newFinishMovementStateTime) {
        var index = GameComponentsLookup.WaitState;
        var component = (Unity_Entitas.Components.WaitStateComponent)CreateComponent(index, typeof(Unity_Entitas.Components.WaitStateComponent));
        component.FinishMovementStateTime = newFinishMovementStateTime;
        ReplaceComponent(index, component);
    }

    public void RemoveWaitState() {
        RemoveComponent(GameComponentsLookup.WaitState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWaitState;

    public static Entitas.IMatcher<GameEntity> WaitState {
        get {
            if (_matcherWaitState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WaitState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWaitState = matcher;
            }

            return _matcherWaitState;
        }
    }
}
