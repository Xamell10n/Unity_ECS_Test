//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity timeSinceStartupEntity { get { return GetGroup(InputMatcher.TimeSinceStartup).GetSingleEntity(); } }
    public Enemies.Components.Input.TimeSinceStartupComponent timeSinceStartup { get { return timeSinceStartupEntity.timeSinceStartup; } }
    public bool hasTimeSinceStartup { get { return timeSinceStartupEntity != null; } }

    public InputEntity SetTimeSinceStartup(float newValue) {
        if (hasTimeSinceStartup) {
            throw new Entitas.EntitasException("Could not set TimeSinceStartup!\n" + this + " already has an entity with Enemies.Components.Input.TimeSinceStartupComponent!",
                "You should check if the context already has a timeSinceStartupEntity before setting it or use context.ReplaceTimeSinceStartup().");
        }
        var entity = CreateEntity();
        entity.AddTimeSinceStartup(newValue);
        return entity;
    }

    public void ReplaceTimeSinceStartup(float newValue) {
        var entity = timeSinceStartupEntity;
        if (entity == null) {
            entity = SetTimeSinceStartup(newValue);
        } else {
            entity.ReplaceTimeSinceStartup(newValue);
        }
    }

    public void RemoveTimeSinceStartup() {
        timeSinceStartupEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Enemies.Components.Input.TimeSinceStartupComponent timeSinceStartup { get { return (Enemies.Components.Input.TimeSinceStartupComponent)GetComponent(InputComponentsLookup.TimeSinceStartup); } }
    public bool hasTimeSinceStartup { get { return HasComponent(InputComponentsLookup.TimeSinceStartup); } }

    public void AddTimeSinceStartup(float newValue) {
        var index = InputComponentsLookup.TimeSinceStartup;
        var component = (Enemies.Components.Input.TimeSinceStartupComponent)CreateComponent(index, typeof(Enemies.Components.Input.TimeSinceStartupComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimeSinceStartup(float newValue) {
        var index = InputComponentsLookup.TimeSinceStartup;
        var component = (Enemies.Components.Input.TimeSinceStartupComponent)CreateComponent(index, typeof(Enemies.Components.Input.TimeSinceStartupComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeSinceStartup() {
        RemoveComponent(InputComponentsLookup.TimeSinceStartup);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherTimeSinceStartup;

    public static Entitas.IMatcher<InputEntity> TimeSinceStartup {
        get {
            if (_matcherTimeSinceStartup == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.TimeSinceStartup);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherTimeSinceStartup = matcher;
            }

            return _matcherTimeSinceStartup;
        }
    }
}
